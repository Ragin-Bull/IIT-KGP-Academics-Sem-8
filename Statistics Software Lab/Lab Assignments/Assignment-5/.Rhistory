getNorm <- function(mat) {
sqrt(sum(mat^2))
}
generateMVNSample <- function(meanVector, covarianceVector) {
p <- length(meanVector)
C <- chol(covarianceVector)
Z <- matrix(rnorm(p))
X <- meanVector + C %*% Z
return(t(X))
}
generateRandomMVNSamples <- function(meanVector, covarianceVector, num){
result <- numeric(0)
for (i in 1:num){
result <- rbind(result, generateMVNSample(meanVector, covarianceVector))
}
return(result)
}
printSolutionForExercise <- function(meanVector, covarianceVector){
num <- 5000
samples <- generateRandomMVNSamples(meanVector, covarianceVector, num)
sampleMean <- colMeans(samples)
sampleCovariance <- cov(samples)
meanNormError <- getNorm(sampleMean - meanVector)
covarianceNormError <- getNorm(sampleCovariance - covarianceVector)
cat("Sample Mean:", sampleMean, "\n")
cat("Sample Covariance Matrix:", sampleCovariance,"\n")
cat("Mean Norm Error:", meanNormError, "\n")
cat("Covariance Matrix Norm Error:", covarianceNormError, "\n")
}
# Exercise 1
cat("Exercise 1\n")
meanVector <- matrix(c(1, -1, 2), nrow=3, ncol=1)
covarianceVector <- matrix(c(4, 2, 2, 2, 4, 2, 2, 2, 4), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 2
cat("Exercise 2\n")
meanVector <- matrix(c(1, 1, 1), nrow=3, ncol=1)
covarianceVector <- matrix(c(2, -1, 0, -1, 2, -1, 0, -1, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 3
cat("Exercise 3\n")
meanVector <- matrix(c(0, 0, 0), nrow=3, ncol=1)
covarianceVector <- matrix(c(1, -2, 0, -2, 5, 0, 0, 0, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 4
cat("Exercise 4\n")
meanVector <- matrix(c(4, 3, 2, 1), nrow=4, ncol=1)
covarianceVector <- matrix(c(3, 0, 2, 2, 0, 1, 1, 0, 2, 1, 9, -2, 2, 0, -2, 4), nrow=4, ncol=4)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 5
cat("Exercise 5\n")
meanVector <- matrix(c(2, 4, -1, 3, 0), nrow=5, ncol=1)
covarianceVector <- matrix(c(4, -1, 0.5, -0.5, 0, -1, 3, 1, -1, 0, 0.5, 1, 6, 1, -1, -0.5, -1, 1, 4, 0, 0, 0, -1, 0, 2), nrow=5, ncol=5)
printSolutionForExercise(meanVector, covarianceVector)
getNorm <- function(mat) {
sqrt(sum(mat^2))
}
generateMVNSample <- function(meanVector, covarianceVector) {
p <- length(meanVector)
C <- chol(covarianceVector)
Z <- matrix(rnorm(p))
X <- meanVector + C %*% Z
return(t(X))
}
generateRandomMVNSamples <- function(meanVector, covarianceVector, num){
result <- numeric(0)
for (i in 1:num){
result <- rbind(result, generateMVNSample(meanVector, covarianceVector))
}
return(result)
}
printSolutionForExercise <- function(meanVector, covarianceVector){
num <- 5000
samples <- generateRandomMVNSamples(meanVector, covarianceVector, num)
sampleMean <- colMeans(samples)
sampleCovariance <- cov(samples)
meanNormError <- getNorm(sampleMean - meanVector)
covarianceNormError <- getNorm(sampleCovariance - covarianceVector)
cat("Sample Mean:", sampleMean, "\n")
cat("Sample Covariance Matrix:", sampleCovariance,"\n")
cat("Mean Norm Error:", meanNormError, "\n")
cat("Covariance Matrix Norm Error:", covarianceNormError, "\n")
}
# Exercise 1
cat("Exercise 1\n")
meanVector <- matrix(c(1, -1, 2), nrow=3, ncol=1)
covarianceVector <- matrix(c(4, 2, 2, 2, 4, 2, 2, 2, 4), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 2
cat("Exercise 2\n")
meanVector <- matrix(c(1, 1, 1), nrow=3, ncol=1)
covarianceVector <- matrix(c(2, -1, 0, -1, 2, -1, 0, -1, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 3
cat("Exercise 3\n")
meanVector <- matrix(c(0, 0, 0), nrow=3, ncol=1)
covarianceVector <- matrix(c(1, -2, 0, -2, 5, 0, 0, 0, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 4
cat("Exercise 4\n")
meanVector <- matrix(c(4, 3, 2, 1), nrow=4, ncol=1)
covarianceVector <- matrix(c(3, 0, 2, 2, 0, 1, 1, 0, 2, 1, 9, -2, 2, 0, -2, 4), nrow=4, ncol=4)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 5
cat("Exercise 5\n")
meanVector <- matrix(c(2, 4, -1, 3, 0), nrow=5, ncol=1)
covarianceVector <- matrix(c(4, -1, 0.5, -0.5, 0, -1, 3, 1, -1, 0, 0.5, 1, 6, 1, -1, -0.5, -1, 1, 4, 0, 0, 0, -1, 0, 2), nrow=5, ncol=5)
printSolutionForExercise(meanVector, covarianceVector)
getNorm <- function(mat) {
sqrt(sum(mat^2))
}
generateMVNSample <- function(meanVector, covarianceVector) {
p <- length(meanVector)
C <- chol(covarianceVector)
Z <- matrix(rnorm(p))
X <- meanVector + C %*% Z
return(t(X))
}
generateRandomMVNSamples <- function(meanVector, covarianceVector, num){
result <- numeric(0)
for (i in 1:num){
result <- rbind(result, generateMVNSample(meanVector, covarianceVector))
}
return(result)
}
printSolutionForExercise <- function(meanVector, covarianceVector){
num <- 5000
samples <- generateRandomMVNSamples(meanVector, covarianceVector, num)
sampleMean <- colMeans(samples)
sampleCovariance <- cov(samples)
meanNormError <- getNorm(sampleMean - meanVector)
covarianceNormError <- getNorm(sampleCovariance - covarianceVector)
cat("Sample Mean:", sampleMean, "\n")
cat("Sample Covariance Matrix:", sampleCovariance,"\n")
cat("Mean Norm Error:", meanNormError, "\n")
cat("Covariance Matrix Norm Error:", covarianceNormError, "\n")
}
# Exercise 1
cat("Exercise 1\n")
meanVector <- matrix(c(1, -1, 2), nrow=3, ncol=1)
covarianceVector <- matrix(c(4, 2, 2, 2, 4, 2, 2, 2, 4), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 2
cat("Exercise 2\n")
meanVector <- matrix(c(1, 1, 1), nrow=3, ncol=1)
covarianceVector <- matrix(c(2, -1, 0, -1, 2, -1, 0, -1, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 3
cat("Exercise 3\n")
meanVector <- matrix(c(0, 0, 0), nrow=3, ncol=1)
covarianceVector <- matrix(c(1, -2, 0, -2, 5, 0, 0, 0, 2), nrow=3, ncol=3)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 4
cat("Exercise 4\n")
meanVector <- matrix(c(4, 3, 2, 1), nrow=4, ncol=1)
covarianceVector <- matrix(c(3, 0, 2, 2, 0, 1, 1, 0, 2, 1, 9, -2, 2, 0, -2, 4), nrow=4, ncol=4)
printSolutionForExercise(meanVector, covarianceVector)
# Exercise 5
cat("Exercise 5\n")
meanVector <- matrix(c(2, 4, -1, 3, 0), nrow=5, ncol=1)
covarianceVector <- matrix(c(4, -1, 0.5, -0.5, 0, -1, 3, 1, -1, 0, 0.5, 1, 6, 1, -1, -0.5, -1, 1, 4, 0, 0, 0, -1, 0, 2), nrow=5, ncol=5)
printSolutionForExercise(meanVector, covarianceVector)
